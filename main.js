!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=n}var n,r;return n=t,(r=[{key:"_showInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"_toggleButtonState",value:function(){this._getInvalidInput()?(this._button.classList.add(this._inactiveButtonClass),this._button.disabled=!0):(this._button.classList.remove(this._inactiveButtonClass),this._button.disabled=!1)}},{key:"_getInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_setEventListeners",value:function(){var e=this;this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._button=this._formElement.querySelector(this._submitButtonSelector),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}])&&e(n.prototype,r),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t){var n=t.data,r=t.handleCardClick,o=t.handleLikeCard,i=t.handleRemoveCard,a=t.cardSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=n.name,this._link=n.link,this._cardId=n._id,this._likes=n.likes,this._cardOwner=n.owner._id,this._cardSelector=a,this._handleCardClick=r,this._handleLikeCard=o,this._handleRemoveCard=i,this._cardLiked=!1}var t,r;return t=e,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".photo-grid__card").cloneNode(!0)}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".photo-grid__heart-icon").addEventListener("click",(function(){e._handleLikeCard(e)})),this._element.querySelector(".photo-grid__delete-icon").addEventListener("click",(function(){e._handleRemoveCard({id:e._cardId})})),this._element.querySelector(".photo-grid__image").addEventListener("click",(function(){e._handleCardClick({link:e._link,name:e._name})}))}},{key:"removeCard",value:function(){this._element.remove(),this._element=null}},{key:"_renderLikes",value:function(e){this._element.querySelector(".photo-grid__text").textContent=this._likes.length,this._likes.some((function(t){return t._id===e}))?(this._cardLiked=!0,this._element.querySelector(".photo-grid__heart-icon").classList.add("photo-grid__heart-icon_active")):(this._cardLiked=!1,this._element.querySelector(".photo-grid__heart-icon").classList.remove("photo-grid__heart-icon_active"))}},{key:"updateCount",value:function(e,t){this._likes=e.likes,this._renderLikes(t)}},{key:"generateCard",value:function(e){return this._element=this._getTemplate(),this._setEventListeners(),this._element.querySelector(".photo-grid__image").src=this._link,this._element.querySelector(".photo-grid__image").alt=this._name,this._element.querySelector(".photo-grid__title").textContent=this._name,this._renderLikes(e),this._cardOwner!==e&&(this._element.querySelector(".photo-grid__delete-icon").hidden=!0),this._element}}])&&n(t.prototype,r),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=document.querySelector(n),this._items=[]}var t,n;return t=e,(n=[{key:"addItem",value:function(e,t){this._container.prepend(e),this._items[t]=e}},{key:"removeItem",value:function(e){var t=this._items[e];t.remove(),t=null,this._items.splice(e)}},{key:"renderItems",value:function(e){e.forEach(this._renderer)}}])&&o(t.prototype,n),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var c=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this),this.close=this.close.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.addEventListener("click",(function(t){(t.target.classList.contains("popup_type_preview")||t.target.classList.contains("popup__close-button"))&&e.close()}))}}])&&a(t.prototype,n),e}();function u(e){return u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},u(e)}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(e,t,n){return l="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=p(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},l(e,t,n||e)}function f(e,t){return f=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},f(e,t)}function h(e,t){if(t&&("object"===u(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function p(e){return p=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},p(e)}var d=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&f(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=p(r);if(o){var n=p(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return h(this,e)});function a(e){var t,n=e.popupSelector,r=e.formButton,o=e.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,n))._handleFormSubmit=o,t._formButton=r,t}return t=a,(n=[{key:"setEventListeners",value:function(){var e=this;this._popupElement.querySelector(".form").addEventListener("submit",(function(t){t.preventDefault(),e._popupElement.querySelector(".form__button").textContent="Saving...",e._handleFormSubmit(e._getInputValues())})),l(p(a.prototype),"setEventListeners",this).call(this)}},{key:"close",value:function(){this._popupElement.querySelector(".form").reset(),l(p(a.prototype),"close",this).call(this)}},{key:"stopLoading",value:function(){this._popupElement.querySelector(".form__button").textContent=this._formButton}},{key:"_getInputValues",value:function(){var e=this;return this._inputList=this._popupElement.querySelectorAll(".form__input"),this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}}])&&s(t.prototype,n),a}(c);function _(e){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_(e)}function y(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function v(e,t,n){return v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=E(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},v(e,t,n||e)}function b(e,t){return b=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},b(e,t)}function g(e,t){if(t&&("object"===_(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function E(e){return E=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},E(e)}var S=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&b(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=E(r);if(o){var n=E(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return g(this,e)});function a(){return y(this,a),i.apply(this,arguments)}return t=a,(n=[{key:"open",value:function(e){var t=e.link,n=e.name;this._popupElement.querySelector(".popup__caption").textContent=n;var r=this._popupElement.querySelector(".popup__image");r.src=t,r.alt=n,v(E(a.prototype),"open",this).call(this)}}])&&m(t.prototype,n),a}(c),k=S;function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var w=function(){function e(t){var n=t.nameSelector,r=t.titleSelector,o=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameElement=document.querySelector(n),this._titleElement=document.querySelector(r),this._avatarElement=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._nameElement.textContent,about:this._titleElement.textContent,avatar:this._avatarElement.src,id:this._id}}},{key:"setUserInfo",value:function(e){this._nameElement.textContent=e.name,this._titleElement.textContent=e.about,this._avatarElement.src=e.avatar,this._id=e._id}},{key:"getId",value:function(){return this._id}},{key:"setAvatar",value:function(e){this._avatarElement.src=e}}])&&C(t.prototype,n),e}();function L(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var O=function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._headers=r,this._handleResponse=this._handleResponse.bind(this)}var t,n;return t=e,(n=[{key:"_handleResponse",value:function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}},{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"cards"),{headers:this._headers}).then(this._handleResponse)}},{key:"addCard",value:function(e){return fetch("".concat(this._baseUrl,"cards"),{headers:this._headers,method:"POST",body:JSON.stringify(e)}).then(this._handleResponse)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._baseUrl,"cards/").concat(e),{headers:this._headers,method:"DELETE",body:JSON.stringify({_id:e})}).then(this._handleResponse)}},{key:"addLike",value:function(e){return fetch("".concat(this._baseUrl,"cards/likes/").concat(e),{headers:this._headers,method:"PUT",body:JSON.stringify({_id:e})}).then(this._handleResponse)}},{key:"deleteLike",value:function(e){return fetch("".concat(this._baseUrl,"cards/likes/").concat(e),{headers:this._headers,method:"DELETE",body:JSON.stringify({_id:e})}).then(this._handleResponse)}},{key:"getUser",value:function(){return fetch("".concat(this._baseUrl,"users/me"),{headers:this._headers}).then(this._handleResponse)}},{key:"setUser",value:function(e,t,n){return fetch("".concat(this._baseUrl,"users/me"),{headers:this._headers,method:"PATCH",body:JSON.stringify({name:e,about:t,avatar:n})}).then(this._handleResponse)}},{key:"getAvatar",value:function(){return fetch("".concat(this._baseUrl,"users/me/avatar"),{headers:this._headers,method:"GET"}).then(this._handleResponse)}},{key:"setAvatar",value:function(e){return fetch("".concat(this._baseUrl,"users/me/avatar"),{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:e})}).then(this._handleResponse)}}])&&L(t.prototype,n),e}();function q(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var I=document.querySelector(".popup_type_edit"),R=document.querySelector(".popup_type_add"),j=document.querySelector(".popup_type_avatar"),P=I.querySelector(".form"),T=R.querySelector(".form"),B=j.querySelector(".form"),x=document.querySelector(".profile__edit-button"),U=document.querySelector(".profile__add-button"),A=document.querySelector(".profile__avatar-button"),V=(document.querySelector(".profile__image"),document.querySelector(".profile__name")),D=document.querySelector(".profile__title");function F(e){e._popupElement.querySelector(".form__button").classList.add("form__button_disabled")}var N=new O({baseUrl:"https://around.nomoreparties.co/v1/group-11/",headers:{authorization:"ce0cfad9-c022-44c4-8673-897f4eaf9eed","Content-Type":"application/json"}});Promise.all([N.getUser(),N.getInitialCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,c=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){c=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(c)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return q(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?q(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];J.setUserInfo(o),i.sort((function(e,t){return new Date(e.createdAt)-new Date(t.createdAt)})),H.renderItems(i)})).catch((function(e){return console.log("Error: ".concat(e))}));var J=new w({nameSelector:".profile__name",titleSelector:".profile__title",avatarSelector:".profile__image"}),H=new i({renderer:function(e){M(e)}},".photo-grid");function M(e){var t=new r({data:e,handleCardClick:function(e){K.open(e)},handleLikeCard:function(e){e._cardLiked?N.deleteLike(e._cardId).then((function(t){e.updateCount(t,J.getId())})).catch((function(e){return console.log("Error: ".concat(e))})):N.addLike(e._cardId).then((function(t){e.updateCount(t,J.getId())})).catch((function(e){return console.log("Error: ".concat(e))}))},handleRemoveCard:function(e){var t;t=e.id,Y._popupElement.querySelector(".form__input_type_card-id").value=t,Y.open()},cardSelector:".card-template"}),n=t.generateCard(J.getId());H.addItem(n,t._cardId)}var z=new d({popupSelector:".popup_type_add",formButton:"Create",handleFormSubmit:function(e){var t={name:e.name,link:e.link};N.addCard(t).then((function(e){M(e),z.close()})).catch((function(e){return console.log("Error: ".concat(e))})).finally((function(){z.stopLoading()}))}});z.setEventListeners(),U.addEventListener("click",(function(){F(z),z.open()}));var G=new d({popupSelector:".popup_type_edit",formButton:"Save",handleFormSubmit:function(e){var t=e.name,n=e.about;N.setUser(t,n).then((function(e){V.textContent=t,D.textContent=n,G.close()})).catch((function(e){return console.log("Error: ".concat(e))})).finally((function(){G.stopLoading()}))}});G.setEventListeners(),x.addEventListener("click",(function(){var e,t;e=V.textContent,t=D.textContent,G._popupElement.querySelector(".form__input_type_name").value=e,G._popupElement.querySelector(".form__input_type_title").value=t,G.open()}));var Y=new d({popupSelector:".popup_type_delete",formButton:"Yes",handleFormSubmit:function(e){N.deleteCard(e.id).then((function(t){H.removeItem(e.id),Y.close()})).catch((function(e){return console.log("Error: ".concat(e))})).finally((function(){Y.stopLoading()}))}});Y.setEventListeners();var $=new d({popupSelector:".popup_type_avatar",formButton:"Save",handleFormSubmit:function(e){var t=e.avatarLink;N.setAvatar(t).then((function(e){J.setAvatar(t),$.close()})).catch((function(e){return console.log("Error: ".concat(e))})).finally((function(){$.stopLoading()}))}});$.setEventListeners(),A.addEventListener("click",(function(){$.open(),F($)}));var K=new k(".popup_type_preview");K.setEventListeners();var Q={inputSelector:".form__input",submitButtonSelector:".form__button",inactiveButtonClass:"form__button_disabled",inputErrorClass:"form__input_type_error",errorClass:"form__error_visible"};new t(Q,T).enableValidation(),new t(Q,P).enableValidation(),new t(Q,B).enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,