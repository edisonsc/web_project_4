!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=n}var n,r;return n=t,(r=[{key:"_showInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"_toggleButtonState",value:function(){this._getInvalidInput()?(this._button.classList.add(this._inactiveButtonClass),this._button.disabled=!0):(this._button.classList.remove(this._inactiveButtonClass),this._button.disabled=!1)}},{key:"_getInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_setEventListeners",value:function(){var e=this;this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._button=this._formElement.querySelector(this._submitButtonSelector),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}])&&e(n.prototype,r),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t){var n=t.data,r=t.handleCardClick,o=t.handleLikeCard,i=t.handleRemoveCard,a=t.cardSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=n.name,this._link=n.link,this._cardId=n._id,this._likes=n.likes,this._cardLiked=!1,this._cardOwner=n.owner._id,this._cardSelector=a,this._handleCardClick=r,this._handleLikeCard=o,this._handleRemoveCard=i}var t,r;return t=e,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".photo-grid__card").cloneNode(!0)}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".photo-grid__heart-icon").addEventListener("click",(function(){e._handleLikeCard(e)})),this._element.querySelector(".photo-grid__delete-icon").addEventListener("click",(function(){e._handleRemoveCard({id:e._cardId})})),this._element.querySelector(".photo-grid__image").addEventListener("click",(function(){e._handleCardClick({link:e._link,name:e._name})}))}},{key:"removeCard",value:function(){this._element.remove(),this._element=null}},{key:"updateCount",value:function(e){this._element.querySelector(".photo-grid__text").textContent=e.likes.length,this._cardLiked=!this._cardLiked,this._element.querySelector(".photo-grid__heart-icon").classList.toggle("photo-grid__heart-icon_active")}},{key:"generateCard",value:function(e){var t=this;return this._element=this._getTemplate(),this._setEventListeners(),this._element.querySelector(".photo-grid__image").src=this._link,this._element.querySelector(".photo-grid__image").alt=this._name,this._element.querySelector(".photo-grid__title").textContent=this._name,this._element.querySelector(".photo-grid__text").textContent=this._likes.length,this._likes.forEach((function(n){n._id===e&&(t._cardLiked=!0,t._element.querySelector(".photo-grid__heart-icon").classList.toggle("photo-grid__heart-icon_active"))})),this._cardOwner!==e&&(this._element.querySelector(".photo-grid__delete-icon").hidden=!0),this._element}}])&&n(t.prototype,r),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=document.querySelector(n),this._cards=[]}var t,n;return t=e,(n=[{key:"addItem",value:function(e,t){this._container.prepend(e),this._cards[t]=e}},{key:"removeItem",value:function(e){var t=this._cards[e];t.remove(),t=null,this._cards.splice(e)}},{key:"renderItems",value:function(){var e=this;this._items.forEach((function(t){e._renderer(t)}))}}])&&o(t.prototype,n),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var s=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this),this.close=this.close.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.addEventListener("click",(function(t){(t.target.classList.contains("popup_type_preview")||t.target.classList.contains("popup__close-button"))&&e.close()}))}}])&&a(t.prototype,n),e}();function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(e,t,n){return l="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=d(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},l(e,t,n||e)}function h(e,t){return h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},h(e,t)}function f(e,t){if(t&&("object"===c(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function d(e){return d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},d(e)}var p=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&h(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=d(r);if(o){var n=d(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return f(this,e)});function a(e){var t,n=e.popupSelector,r=e.formButton,o=e.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,n))._handleFormSubmit=o,t._formButton=r,t}return t=a,(n=[{key:"setEventListeners",value:function(){var e=this;this._popupElement.querySelector(".form").addEventListener("submit",(function(t){t.preventDefault(),e._popupElement.querySelector(".form__button").textContent="Saving...",e._handleFormSubmit(e._getInputValues())})),l(d(a.prototype),"setEventListeners",this).call(this)}},{key:"close",value:function(){this._popupElement.querySelector(".form").reset(),this._popupElement.querySelector(".form__button").textContent=this._formButton,l(d(a.prototype),"close",this).call(this)}},{key:"setDefaultValues",value:function(e,t){this._popupElement.querySelector(".form__input_type_name").value=e,this._popupElement.querySelector(".form__input_type_title").value=t}},{key:"setCardId",value:function(e){this._popupElement.querySelector(".form__input_type_card-id").value=e}},{key:"_getInputValues",value:function(){var e=this;return this._inputList=this._popupElement.querySelectorAll(".form__input"),this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value,e._formValues[t.about]=t.value})),this._formValues}}])&&u(t.prototype,n),a}(s);function _(e){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_(e)}function y(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function v(e,t,n){return v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=S(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},v(e,t,n||e)}function b(e,t){return b=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},b(e,t)}function E(e,t){if(t&&("object"===_(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function S(e){return S=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},S(e)}var g=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&b(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=S(r);if(o){var n=S(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return E(this,e)});function a(){return y(this,a),i.apply(this,arguments)}return t=a,(n=[{key:"open",value:function(e){var t=e.link,n=e.name;this._popupElement.querySelector(".popup__caption").textContent=n;var r=this._popupElement.querySelector(".popup__image");r.src=t,r.alt=n,v(S(a.prototype),"open",this).call(this)}}])&&m(t.prototype,n),a}(s),k=g;function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var w=function(){function e(t){var n=t.nameSelector,r=t.titleSelector,o=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameElement=document.querySelector(n),this._titleElement=document.querySelector(r),this._avatarElement=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._nameElement.textContent,about:this._titleElement.textContent,avatar:this._avatarElement.src}}},{key:"setUserInfo",value:function(e){this._nameElement.textContent=e.name,this._titleElement.textContent=e.about,this._avatarElement.src=e.avatar}}])&&C(t.prototype,n),e}();function L(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var R=function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._headers=r,this._handleResponse=this._handleResponse.bind(this),this._handleErrorResponse=this._handleErrorResponse.bind(this)}var t,n;return t=e,(n=[{key:"_handleResponse",value:function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}},{key:"_handleErrorResponse",value:function(e){console.log("Error:",e)}},{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"cards"),{headers:this._headers}).then(this._handleResponse).catch(this._handleErrorResponse)}},{key:"addCard",value:function(e){return fetch("".concat(this._baseUrl,"cards"),{headers:this._headers,method:"POST",body:JSON.stringify(e)}).then(this._handleResponse).catch(this._handleErrorResponse)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._baseUrl,"cards/").concat(e),{headers:this._headers,method:"DELETE",body:JSON.stringify({_id:e})}).then(this._handleResponse).catch(this._handleErrorResponse)}},{key:"addLike",value:function(e){return fetch("".concat(this._baseUrl,"cards/likes/").concat(e),{headers:this._headers,method:"PUT",body:JSON.stringify({_id:e})}).then(this._handleResponse).catch(this._handleErrorResponse)}},{key:"deleteLike",value:function(e){return fetch("".concat(this._baseUrl,"cards/likes/").concat(e),{headers:this._headers,method:"DELETE",body:JSON.stringify({_id:e})}).then(this._handleResponse).catch(this._handleErrorResponse)}},{key:"getUser",value:function(){return fetch("".concat(this._baseUrl,"users/me"),{headers:this._headers}).then(this._handleResponse).catch(this._handleErrorResponse)}},{key:"setUser",value:function(e,t,n){return fetch("".concat(this._baseUrl,"users/me"),{headers:this._headers,method:"PATCH",body:JSON.stringify({name:e,about:t,avatar:n})}).then(this._handleResponse).catch(this._handleErrorResponse)}},{key:"getAvatar",value:function(){return fetch("".concat(this._baseUrl,"users/me/avatar"),{headers:this._headers,method:"GET"}).then(this._handleResponse).catch(this._handleErrorResponse)}},{key:"setAvatar",value:function(e){return fetch("".concat(this._baseUrl,"users/me/avatar"),{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:e})}).then(this._handleResponse).catch(this._handleErrorResponse)}}])&&L(t.prototype,n),e}(),O=document.querySelector(".popup_type_edit"),q=document.querySelector(".popup_type_add"),I=O.querySelector(".form"),j=q.querySelector(".form"),P=document.querySelector(".profile__edit-button"),x=document.querySelector(".profile__add-button"),B=document.querySelector(".profile__avatar-button"),T=document.querySelector(".profile__image"),U=document.querySelector(".profile__name"),V=document.querySelector(".profile__title"),D=new R({baseUrl:"https://around.nomoreparties.co/v1/group-11/",headers:{authorization:"ce0cfad9-c022-44c4-8673-897f4eaf9eed","Content-Type":"application/json"}});function A(e){return new r({data:e,handleCardClick:function(e){J.open(e)},handleLikeCard:function(e){console.log(e),e._cardLiked?D.deleteLike(e._cardId).then((function(t){e.updateCount(t)})):D.addLike(e._cardId).then((function(t){e.updateCount(t)}))},handleRemoveCard:function(e){N.setCardId(e.id),N.open()},cardSelector:".card-template"})}var F="";D.getUser().then((function(e){D.getInitialCards().then((function(t){t.sort((function(e,t){return new Date(e.createdAt)-new Date(t.createdAt)})),(F=new i({items:t,renderer:function(t){var n=A(t),r=n.generateCard(e._id);F.addItem(r,n._cardId)}},".photo-grid")).renderItems()}));var t=new p({popupSelector:".popup_type_add",formButton:"Create",handleFormSubmit:function(n){var r={name:n.name,link:n.link};D.addCard(r).then((function(t){var n=A(t),r=n.generateCard(e._id);F.addItem(r,n._cardId)})).finally(t.close())}});t.setEventListeners(),x.addEventListener("click",(function(){t.open()}))}));var N=new p({popupSelector:".popup_type_delete",formButton:"Yes",handleFormSubmit:function(e){D.deleteCard(e.id).then((function(t){F.removeItem(e.id)})).finally(N.close())}});N.setEventListeners(),D.getUser().then((function(e){new w({nameSelector:".profile__name",titleSelector:".profile__title",avatarSelector:".profile__image"}).setUserInfo(e)})),D.getUser().then((function(e){var t=new p({popupSelector:".popup_type_edit",formButton:"Save",handleFormSubmit:function(e){var n=e.name,r=e.about;D.setUser(n,r).then((function(e){U.textContent=n,V.textContent=r})).finally(t.close())}});t.setEventListeners(),P.addEventListener("click",(function(){t.setDefaultValues(U.textContent,V.textContent),t.open()}))}));var J=new k(".popup_type_preview");J.setEventListeners();var H=new p({popupSelector:".popup_type_avatar",formButton:"Save",handleFormSubmit:function(e){var t=e.link;D.setAvatar(t).then((function(e){T.src=t})).finally(H.close())}});H.setEventListeners(),B.addEventListener("click",(function(){H.open()}));var z={inputSelector:".form__input",submitButtonSelector:".form__button",inactiveButtonClass:"form__button_disabled",inputErrorClass:"form__input_type_error",errorClass:"form__error_visible"};new t(z,j).enableValidation(),new t(z,I).enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,